" TODO do not duplicate the insert_header
"
function! s:insert_auto_makefile()
    call inputsave()
    let language = confirm('Makefile', "&C\nC&++\n&Empty", 1)
    call inputrestore()
    if language == 1
	let compiler = "CC"
	let default_compiler = "gcc"
	let compiler_flags = "CFLAGS"
	let default_compiler_flags = "-W -Wall -std=c99 -Wextra"
	let source_extension = ".c"
    elseif language == 2
	let compiler = "CXX"
	let default_compiler = "g++"
	let compiler_flags = "CXXFLAGS"
	let default_compiler_flags = "-W -Wall -Wextra"
	let source_extension = ".cpp"
    else
	return
    endif

    let exe_name = "a.out"
    execute "set paste" 
    execute "normal! o"
    execute "normal! o".compiler."       ?= ".default_compiler
    execute "normal! o".compiler_flags."   += ".default_compiler_flags

    execute "normal! oNAME      = ".exe_name
    execute "normal! oSRC       = "
    execute "normal! o"
    execute "normal! oall: depend $(NAME)"
    execute "normal! o"
    execute "normal! odepend: .depend"
    execute "normal! o"
    execute "normal! o.depend: $(SRC)"
    execute "normal! o	@$(RM) .depend"
    execute "normal! o	$(".compiler.") $(".compiler_flags.") -MM $^ > .depend"
    execute "normal! o"
    execute "normal! oinclude .depend"
    execute "normal! o"
    execute "normal! oOBJ     = $(SRC:".source_extension."=.o)"
    execute "normal! o"
    execute "normal! o$(NAME): $(OBJ)"
    execute "normal! o	$(".compiler.") -o $@ $^ $(LDFLAGS)"
    execute "normal! o"
    execute "normal! oclean:"
    execute "normal! o	$(RM) $(OBJ)"
    execute "normal! o"
    execute "normal! ofclean: clean"
    execute "normal! o	$(RM) $(NAME)"
    execute "normal! o"
    execute "normal! ore: fclean all"
    execute "normal! o"
    execute "normal! o.PHONY: all depend clean fclean all re"
    execute ":set nopaste"
endfunction
autocmd BufNewFile {Makefile,makefile} call <SID>insert_header_makefile()
autocmd BufNewFile {Makefile,makefile} call <SID>insert_auto_makefile()


autocmd BufNewFile {} call <SID>insert_()
autocmd BufNewFile {} call <SID>insert_()
autocmd BufNewFile {} call <SID>insert_()
